-- 1.- FUNCION ESCALAR QUE RECIBA DOS CLAVES DE CLIENTES, UN AÑO Y UN MES, Y REGRESE EL NOMBRE DEL CLIENTE
-- QUE MAS HA VENDIDO PIEZAS DE LOS DOS EN ESE AÑO-MES Y EL TOTAL DE PIEZAS VENDIDAS. POR EJEMPLO,
-- DEBE REGRESAR: EL CLIENTE JUAN PEREZ VENDIO 450 PIEZAS.
CREATE OR ALTER FUNCTION DBO.CLIVENTAMAYOR(@CLI1 NCHAR(5) , @CLI2 NCHAR(5), @ANNO INT, @MES INT)
RETURNS NVARCHAR(255)
AS
BEGIN
	DECLARE @PIEZAS1 INT, @PIEZAS2 INT, @MENSAJE NVARCHAR(255)
	DECLARE @NOMBRE1 NVARCHAR(255), @NOMBRE2 NVARCHAR(255)

	SELECT
		@PIEZAS1 = SUM(CASE WHEN O.CUSTOMERID = @CLI1 THEN OD.QUANTITY ELSE 0 END),
		@PIEZAS2 = SUM(CASE WHEN O.CUSTOMERID = @CLI2 THEN OD.QUANTITY ELSE 0 END)
	FROM CUSTOMERS C
	INNER JOIN ORDERS O ON O.CUSTOMERID = C.CUSTOMERID
	INNER JOIN [ORDER DETAILS] OD ON O.ORDERID=OD.ORDERID
	WHERE YEAR(O.ORDERDATE)=@ANNO AND MONTH(O.ORDERDATE)=@MES

	SELECT @PIEZAS1 = ISNULL(@PIEZAS1,0), @PIEZAS2=ISNULL(@PIEZAS2,0)
	SELECT @NOMBRE1 = COMPANYNAME FROM CUSTOMERS WHERE @CLI1=CUSTOMERID
	SELECT @NOMBRE2 = COMPANYNAME FROM CUSTOMERS WHERE @CLI2=CUSTOMERID

	IF @PIEZAS1 = @PIEZAS2
		SELECT @MENSAJE = CONCAT('LOS DOS CLIENTES VENDIERON LO MISMO ', @PIEZAS1, ' PIEZAS')
	ELSE IF @PIEZAS1>@PIEZAS2
		SELECT @MENSAJE = CONCAT('EL CLIENTE ', @NOMBRE1,' VENDIO ', @PIEZAS1, ' PIEZAS')
	ELSE
		SELECT @MENSAJE = CONCAT('EL CLIENTE ', @NOMBRE2,' VENDIO ', @PIEZAS2, ' PIEZAS')

	RETURN @MENSAJE
END
GO
--EJECUCION
DECLARE @CLI1 NCHAR(5) = 'BLONP', @CLI2 NCHAR(5) = 'CENTC'
DECLARE @ANNO INT = 1996, @MES INT = 7
SELECT DBO.CLIVENTAMAYOR(@CLI1,@CLI2,@ANNO,@MES)
GO

-- 2.- FUNCION ESCALAR QUE RECIBA LA CLAVE DEL TERRITORIO Y
-- REGRESE UNA CADENA CON LOS NOMBRE DE LOS EMPLEADOS QUE SURTEN DICHO TERRITORIO.
CREATE OR ALTER FUNCTION DBO.TERRITORIOEMP(@TERRID NVARCHAR(20))
RETURNS NVARCHAR(255)
AS
BEGIN
	DECLARE @EMPLEADOS NVARCHAR(255)
	SELECT
		@EMPLEADOS=STRING_AGG(FIRSTNAME,', ')
	FROM EMPLOYEETERRITORIES ET
	INNER JOIN EMPLOYEES E ON ET.EMPLOYEEID=E.EMPLOYEEID
	WHERE ET.TERRITORYID=@TERRID

	RETURN @EMPLEADOS
END
GO
-- EJECUCION
DECLARE @TERRID NVARCHAR(20)='03049'
SELECT DBO.TERRITORIOEMP(@TERRID)
GO

-- 3.- FUNCION DE TABLA EN LINEA QUE RECIBA LA CLAVE DE UN PROVEEDOR Y REGRESE UNA TABLA
-- CON EL NOMBRE DE TODOS LOS PRODUCTOS QUE HA VENDIDO ESE PROVEEDOR, EL TOTAL DE PRODUCTOS VENDIDOS
-- Y EL TOTAL DE ORDENES EN LAS QUE SE HAN VENDIDO.
CREATE OR ALTER FUNCTION DBO.FN_PROVEEDORVENTAS (@PROVEEDORID INT)
RETURNS TABLE
AS
RETURN (
	SELECT
		S.COMPANYNAME AS 'NOMBRE DEL PROVEEDOR',
		COUNT(DISTINCT P.PRODUCTNAME) AS 'TOTAL PRODUCTOS',
		COUNT(*) AS 'TOTAL ORDENES'
	FROM SUPPLIERS S
	INNER JOIN PRODUCTS P ON P.SUPPLIERID=S.SUPPLIERID
	INNER JOIN [ORDER DETAILS] OD ON OD.PRODUCTID=P.PRODUCTID
	WHERE S.SUPPLIERID=@PROVEEDORID
	GROUP BY S.COMPANYNAME
)
GO
--EJECUCION
DECLARE @EMP INT = 2
SELECT * FROM DBO.FN_PROVEEDORVENTAS(@EMP)
GO
-- 4.- FUNCION DE TABLA EN LINEA QUE RECIBA LA CLAVE DEL EMPLEADO, AÑO Y MES,
-- REGRESE EN UNA CONSULTA EL NOMBRE DEL PRODUCTO Y TOTAL DE PRODUCTOS VENDIDOS POR ESE EMPLEADO Y ESE AÑO-MES.
CREATE OR ALTER FUNCTION DBO.FN_PRODPZS (@CLAVEEMPLEADO INT, @AÑO INT, @MES INT)
RETURNS TABLE
AS
RETURN
(
    SELECT
		P.PRODUCTNAME AS NOMBREPRODUCTO,
		SUM(OD.QUANTITY) AS TOTALVENDIDO
    FROM ORDERS O
    INNER JOIN [ORDER DETAILS] OD ON O.ORDERID = OD.ORDERID
	INNER JOIN PRODUCTS P ON OD.PRODUCTID = P.PRODUCTID
    WHERE
		O.EMPLOYEEID = @CLAVEEMPLEADO
		AND YEAR(O.ORDERDATE) = @AÑO
		AND MONTH(O.ORDERDATE) = @MES
    GROUP BY P.PRODUCTNAME
)
GO
--EJECUCION
SELECT * FROM DBO.FN_PRODPZS(1, 1998, 5)

GO
--5.- UTILIZANDO LA FUNCION ANTERIOR MOSTRAR UNA CONSULTA SIGUIENTE:
SELECT
	P.PRODUCTNAME,
	ISNULL(P1.TOTALVENDIDO,0) AS 'TOTALPIEZAS96-ENE',
	ISNULL(P2.TOTALVENDIDO,0) AS 'TOTALPIEZAS97-ENE',
	ISNULL(P3.TOTALVENDIDO,0) AS 'TOTALPIEZAS98-ENE'
FROM PRODUCTS P
LEFT OUTER JOIN DBO.FN_PRODPZS(1,1996,1) P1 ON P.PRODUCTNAME=P1.NOMBREPRODUCTO
LEFT OUTER JOIN DBO.FN_PRODPZS(1,1997,1) P2 ON P.PRODUCTNAME=P2.NOMBREPRODUCTO
LEFT OUTER JOIN DBO.FN_PRODPZS(1,1998,1) P3 ON P.PRODUCTNAME=P3.NOMBREPRODUCTO

GO
--6.- FUNCION DE TABLA DE MULTISENTENCIA (NO LLEVA PARAMETROS DE ENTRADA)
--QUE REGRESE UNA TABLA CON EL NOMBRE DE LA CATEGORIA Y LOS NOMBRES DE LOS PRODUCTOS QUE PERTENECEN A LA
--CATEGORIA Y EL TOTAL DE PIEZAS QUE SE HAN VENDIDO DE ESA CATEGORIA
CREATE OR ALTER FUNCTION DBO.FN_NOMCATPRO()
RETURNS @VENTASCATE TABLE (CATEGORIA NVARCHAR(255), PRODUCTOS NVARCHAR(255), PIEZASVENDIDAS INT)
AS
BEGIN
	DECLARE @CATID INT, @PRODID INT, @ORDENID INT, @PZAVENDIDAS INT
	DECLARE @CATNOMBRE NVARCHAR(50), @PRODUCTOS NVARCHAR(255)
	DECLARE @AUX NVARCHAR(255)

    SELECT @CATID = MIN(CATEGORYID) FROM CATEGORIES

    WHILE @CATID IS NOT NULL
    BEGIN
        SELECT @CATNOMBRE = CategoryName FROM CATEGORIES WHERE CATEGORYID=@CATID
        SELECT @PRODID = MIN(ProductID) FROM PRODUCTS WHERE CATEGORYID = @CATID
		SELECT @PRODUCTOS=ProductName FROM Products WHERE ProductID = @PRODID

		--Checa todos los productos de la categoria
        WHILE @PRODID IS NOT NULL
        BEGIN
			SELECT @PRODID = MIN( ProductID) from Products WHERE ProductID > @PRODID AND CategoryID = @CATID
			IF @PRODID IS NOT NULL
			BEGIN
				SELECT @AUX = ProductName FROM Products WHERE ProductID = @PRODID
				SELECT @PRODUCTOS=CONCAT(@PRODUCTOS,', ',@AUX)
			END
		END
		SELECT @PRODUCTOS=LEFT(@PRODUCTOS,LEN(@PRODUCTOS)-1)

		--Checa las piezas vendidas de la categoria
		SELECT @PZAVENDIDAS = SUM(Quantity)
		FROM CATEGORIES C
		INNER JOIN PRODUCTS P ON C.CategoryID=P.CategoryID
		INNER JOIN [ORDER DETAILS] OD ON P.ProductID = OD.ProductID
		WHERE C.CategoryID=@CATID
		GROUP BY C.CategoryName

        INSERT @VENTASCATE VALUES (@CATNOMBRE,@PRODUCTOS,@PZAVENDIDAS)
        SELECT @CATID = MIN(CategoryID) FROM Categories WHERE CategoryID > @CATID
    END
	RETURN
END
GO
--EJECUCION
SELECT * FROM DBO.FN_NOMCATPRO()
GO
--7.- FUNCION DE TABLA DE MULTISENTENCIA QUE RECIBA UN AÑO COMO PARAMETRO DE ENTRADA,
--QUE REGRESE UNA TABLA CON DOS COLUMNAS: DIA DE LA SEMANA, FOLIOS QUE SE VENDIERON ESE DIA DE SEMANA.
--NOTA, DEBE MOSTRAR TODOS LOS DIAS DE LA SEMANA, AUNQUE NO SE HAYAN REALIZADO ORDENES.
CREATE OR ALTER FUNCTION dbo.fn_VENTASEM (@aÑo INT)
RETURNS @VENTAS TABLE(dia NVARCHAR(10), folios NVARCHAR(255))
AS
BEGIN
	DECLARE  @dia NVARCHAR(10), @folio NVARCHAR(255)
	DECLARE @INDICE INT, @folioid INT, @nombre NVARCHAR(20)
	DECLARE @SEMANA TABLE(CLAVE INT, NOMBREDIA VARCHAR(20))
	INSERT @SEMANA VALUES (1, 'DOMINGO')
	INSERT @SEMANA VALUES (2, 'LUNES')
	INSERT @SEMANA VALUES (3, 'MARTES')
	INSERT @SEMANA VALUES (4, 'MIERCOLES')
	INSERT @SEMANA VALUES (5, 'JUEVES')
	INSERT @SEMANA VALUES (6, 'VIERNES')
	INSERT @SEMANA VALUES (7, 'SABADO')

	SELECT @INDICE = MIN(clave) FROM @semana
	WHILE @INDICE IS NOT NULL
	BEGIN
		SELECT @folio=''

		SELECT @folioid = MIN(OrderID)
		FROM ORDERS
		WHERE YEAR(OrderDate)=@AÑO AND DATEPART(dw,OrderDate)= @INDICE

		WHILE @folioid IS NOT NULL
		BEGIN
			SELECT @folio= @folio  + CAST(@folioid AS VARCHAR)+', '

			SELECT @folioid = MIN(OrderID)
			FROM Orders
			WHERE
				YEAR(OrderDate)= @aÑo AND
				DATEPART(dw,OrderDate)= @INDICE AND
				OrderID>@folioid
		END
		SELECT @nombre= nombreDIA FROM @semana WHERE @INDICE= clave
		INSERT INTO @VENTAS VALUES(@nombre, @folio)
		SELECT @INDICE = MIN(clave) FROM @semana WHERE clave>@INDICE
	END
	RETURN
END
GO
--EJECUCION
SELECT * FROM dbo.fn_VENTASEM(1997)
GO


--8.- FUNCION DE TABLA DE MULTISENTENCIA QUE RECIBA LA CLAVE DE UN EMPLEADO Y REGRESE UNA
--TABLA LOS DIAS DE LA SEMANA Y LOS CUMPLEAÑOS QUE SE HA FESTEJADO ESE DIA DE LA SEMANA
CREATE OR ALTER FUNCTION DBO.FN_CUMPLEAÑOS(@EMPLEADOID INT)
RETURNS @RESP TABLE( NOMBREDIA VARCHAR(20), AÑO VARCHAR)
AS
BEGIN
	DECLARE @FECHA DATETIME, @NOMBRE NVARCHAR(20), @AÑO NVARCHAR (max), @DIA INT
	DECLARE @SEMANA TABLE(CLAVE INT, NOMBREDIA VARCHAR(20))
	INSERT @SEMANA VALUES (1, 'DOMINGO')
	INSERT @SEMANA VALUES (2, 'LUNES')
	INSERT @SEMANA VALUES (3, 'MARTES')
	INSERT @SEMANA VALUES (4, 'MIERCOLES')
	INSERT @SEMANA VALUES (5, 'JUEVES')
	INSERT @SEMANA VALUES (6, 'VIERNES')
	INSERT @SEMANA VALUES (7, 'SABADO')
	SELECT @DIA = MIN(CLAVE) FROM @SEMANA
	WHILE @DIA IS NOT NULL
	BEGIN
		SELECT @AÑO= ''
		SELECT @FECHA = BIRTHDATE FROM EMPLOYEES WHERE EMPLOYEEID= @EMPLEADOID
		WHILE @FECHA <= GETDATE()
		BEGIN
			IF(DATEPART(DW, @FECHA)=@DIA)
			SELECT @AÑO= @AÑO + CAST(YEAR(@FECHA) AS NVARCHAR)+', '
			SELECT @FECHA=DATEADD(YY,1, @FECHA)
		END
		SELECT @NOMBRE =NOMBREDIA FROM @SEMANA WHERE @DIA= CLAVE
		SELECT @AÑO = SUBSTRING(@AÑO,1,LEN(@AÑO)-2)
		INSERT @RESP VALUES (@NOMBRE, @AÑO)
		SELECT @DIA = MIN(CLAVE) FROM @SEMANA WHERE CLAVE>@DIA
	END
	RETURN
END
GO
--EJECUCION
SELECT * FROM DBO.FN_CUMPLEAÑOS(2)

