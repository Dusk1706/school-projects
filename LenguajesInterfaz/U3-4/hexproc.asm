TITLE LEE NUMERO HEXADECIMAL Y LO DESPLIEGA
.MODEL SMALL
.STACK 100H
.DATA
    MSG DB 'DAME UN NUMERO HEXADECIMAL DE HASTA 4 CIFRAS: $'
    MSG2 DB 10, 13, 'EL NUMERO ES : $'
    MSG3 DB 10, 13, 'ERROR, INTENTA DE NUEVO. $'
    NUM_HEX DW 0
.CODE
MAIN PROC
    MOV AX,@DATA
    MOV DS, AX
    
    LEA DX, MSG
    MOV AH, 9
    INT 21H
    
    ;LEER UN HEX, QUEDA EN BX
    CALL LEE_HEX
    
    LEA DX, MSG2
    MOV AH, 9
    INT 21H
    
    ;DESPLEGAR NUMERO EN BX
    CALL DISPLAY_HEX 
    
    MOV AH, 4CH
    INT 21H
MAIN ENDP

LEE_HEX PROC
    PUSH AX
    PUSH CX
INICIO_LEE:
    XOR BX, BX
    MOV CX, 4
CICLO:
    MOV AH, 1
    INT 21H
    CMP AL, 13
    JE FIN_LEE
    CMP AL, '0'
    JL ERROR_LEE
    CMP AL, '9'
    JG MAYUS
FUE_DIGITO:
    AND AL, 0FH
    JMP ACUMULA
MAYUS:
    CMP AL, 'A'
    JL ERROR_LEE
    CMP AL, 'F'
    JG MINUS
FUE_MAYUS:
    SUB AL, 55
    JMP ACUMULA
MINUS:
    CMP AL, 'a'
    JL ERROR_LEE
    CMP AL, 'f'
    JG ERROR_LEE
FUE_MINUS:
    SUB AL, 87
ACUMULA:
    PUSH CX
    MOV CL, 4
    SHL BX, CL
    XOR AH, AH
    ADD BX, AX
    POP CX
    LOOP CICLO
FIN_LEE:
    POP CX
    POP AX
    RET
ERROR_LEE:
    LEA DX, MSG3
    MOV AH, 9
    INT 21H
    JMP INICIO_LEE
LEE_HEX ENDP

DISPLAY_HEX PROC
    PUSH AX
    PUSH BX
    PUSH CX
    PUSH DX
    MOV CX, 4
CICLO_DISP:
    ;PASAR 4 BITS MAS SIGNIFICATIVOS
    MOV DL, BH
    PUSH CX
    ;ACOMODARLOS EN DL
    MOV CL, 4
    SHR DL, CL
    ;RECORRER BX PARA PROXIMO DESPLIEGUE
    MOV CL,4 
    ROL BX, CL
    ;VERIGICAR SI ES FIGITO
    CMP DL, 10
    JGE LETRA
NUMERO:
    ;CONVIERTE DE NUMERO A CHAR
    OR DL, 30H
    JMP DESPLIEGA
LETRA: 
    ;CONVIERTE 
    ADD DL, 55
DESPLIEGA: 
    MOV AH, 2
    INT 21H
    POP CX
    LOOP CICLO_DISP
    POP DX
    POP CX
    POP BX
    POP AX
    RET
DISPLAY_HEX ENDP
    END MAIN